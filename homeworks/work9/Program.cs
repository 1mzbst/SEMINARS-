// Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. 
// Выполнить с помощью рекурсии.

// N = 5 -> "5, 4, 3, 2, 1"
// N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

//Решение

// void ShowNumbers(int n, int stop)
// {
//     if (stop <= n)
//     {

//         ShowNumbers(n, stop + 1);
//         Console.Write(stop + " ");

//     }

// }

// ShowNumbers(5, 1);

// _____________________________________________________________________________________________________________________


// Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.

// M = 1; N = 15 -> 120
// M = 4; N = 8. -> 30

//Решение
// int sum = 0;

// void SumInDeap(int m, int n)
// {
//     if (m <= n)
//     {
//         sum = sum + m;
//         SumInDeap(m + 1, n);
//     }
// }
// SumInDeap(4, 8);
// Console.WriteLine(sum);

// _____________________________________________________________________________________________________________________

// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

//Решение

// int Akkerman(int m, int n)
// {
//     if (m == 0) return n + 1;
//     if (m != 0 && n == 0) return Akkerman(m - 1, 1);
//     if (m > 0 && n > 0) return Akkerman(m - 1, Akkerman(m, n - 1));
//     return Akkerman(n, m);
// }

// Console.WriteLine($"{Akkerman(2, 3)}");

// _____________________________________________________________________________________________________________________